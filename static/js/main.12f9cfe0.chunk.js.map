{"version":3,"sources":["firebase.js","context/UserContext.js","components/Header.js","components/Sidebar.js","pages/MainPage.js","components/SignupForm.js","components/LoginForm.js","components/PostComment.js","components/PostShare.js","components/Post.js","components/ClonnitPremium.js","components/NewPostPopup.js","components/AccountDetails.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","settings","timeStampInSnapShots","userContext","createContext","Header","setShowSignup","setShowLogin","user","setUser","setShowAccountDetails","useState","setError","e","a","preventDefault","signOut","alert","className","onClick","prev","Sidebar","handleShowNewPostPopup","setShowActiveTab","showActiveTab","handleShowClonnitPremium","useContext","type","placeholder","MainPage","SignupForm","showSignup","showLogin","showNextpage","setShowNextpage","emailRef","useRef","usernameRef","passwordRef","passwordConfirmRef","formRef","error","loading","setLoading","current","value","email","password","username","createUserWithEmailAndPassword","then","res","currentUser","updateProfile","displayName","catch","console","log","reset","style","color","ref","onSubmit","required","disabled","LoginForm","signInWithEmailAndPassword","PostComment","dataID","commentAuthor","commentText","commentValue","setCommentValue","setContainsComments","commentsArray","setCommentsArray","setComments","handleSubmit","mapped","uniqid","handleFirestoreCommentUpload","collection","doc","update","useEffect","commentData","onChange","target","PostShare","imgSrc","titleAnchorURL","inputRef","textCopied","setTextCopied","select","document","execCommand","setTimeout","Post","title","author","urlSrc","textContent","timeStamp","dateStamp","urlSrcThumbnail","showPreview","setShowPreview","upvoted","setUpvoted","downvoted","setDownvoted","karma","setKarma","showComments","setShowComments","showSharePost","setShowSharePost","hidePost","setHidePost","upvoteRef","downvoteRef","handleHidePost","src","alt","href","width","height","frameborder","allow","allowfullscreen","ClonnitPremium","showMessage","setShowMessage","onMouseEnter","htmlFor","name","id","NewPost","setShowNewPostPopup","setPostArray","posts","setTitle","setPosts","setImgSrc","setAuthor","setUrlSrc","setTextContent","displayPreviewImg","setDisplayPreviewImg","currentFile","setCurrentFile","uploadedIMG","setUploadedIMG","currentFilePath","setCurrentFilePath","url","setUrl","urlThumbnail","setUrlThumbnail","setTitleAnchorURL","titleLength","setTitleLength","setPlaceHolderArray","Date","toLocaleTimeString","toLocaleDateString","imgSrcRef","titleRef","urlSrcRef","textContentRef","handleActiveTab","handleStorageUpload","storageRef","fileRef","child","files","put","getDownloadURL","handleUrlChange","sliced","slice","updatedURL","thumbnail","titleValue","imgSrcValue","urlSrcValue","textContentValue","handleFirestoreDataUpload","titleAnchorUrl","add","background","transform","action","hidden","accept","size","filePath","URL","createObjectURL","click","maxLength","length","AccountDetails","metadata","creationTime","lastSignInTime","App","showNewPostPopup","postArray","showClonnitPremium","setShowClonnitPremium","showAccountDetails","get","snapshot","mapFirestoreData","docs","data","forEach","unsubscribe","onAuthStateChanged","Provider","NewPostPopup","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.12f9cfe0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n});\n\nexport const auth = app.auth();\nexport const db = app.firestore();\nexport const storage = app.storage();\n// export const serverTimeStamp = app.firestore.FieldValue.serverTimestamp;\n\ndb.settings({ timeStampInSnapShots: true });\n\nexport default app;\n","// import React, { createContext } from \"react\";\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\n\nexport const userContext = createContext(null);\n// const userContext = createContext();\n\n// export function useAuth() {\n//   return useContext(userContext);\n// }\n\n// export function AuthProvider({ children }) {\n//   const [currentUser, setCurrentUser] = useState();\n\n//   function signup(email, password) {\n//     return auth.createUserWithEmailAndPassword(email, password);\n//   }\n\n//   useEffect(() => {\n//     const unsubscribe = auth.onAuthStateChanged((user) => {\n//       setCurrentUser(user);\n//     });\n\n//     return unsubscribe;\n//   }, []);\n\n//   const value = {\n//     currentUser,\n//     signup,\n//   };\n\n//   return <userContext.Provider value={value}>{children}</userContext.Provider>;\n// }\n","import React, { useState, useContext } from \"react\";\n// import { userContext } from \"../context/UserContext\";\n// import { useAuth } from \"../context/AuthContext\";\nimport { userContext } from \"../context/UserContext\";\nimport { auth } from \"../firebase\";\n\nfunction Header({\n  setShowSignup,\n  setShowLogin,\n  user,\n  setUser,\n  setShowAccountDetails,\n}) {\n  // const { user, setUser } = useContext(AuthContext); //currentUser, setCurrentUser?\n  // const { user, setUser } = useContext(userContext); //currentUser, setCurrentUser?\n  // const { logout, currentUser } = useAuth();\n  // const [user, setUser] = useState(currentUser.email ?? \"\");\n  const [error, setError] = useState(\"\");\n\n  async function handleLogout(e) {\n    e.preventDefault();\n\n    setError(\"\");\n    try {\n      await auth.signOut();\n      setUser(null);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  const handleShowAccountDetails = () => {\n    setShowAccountDetails((prev) => !prev);\n  };\n\n  // const currentUser = useContext(AuthContext);\n  // const { currentUser } = useAuth();\n  return (\n    <div className=\"header\">\n      <div className=\"console-account__container\">\n        <div className=\"console\">\n          {/* <p>MY SUBCLONNITS</p>\n          <p>HOME</p>\n          <p>POPULAR</p>\n          <p>ALL</p>\n          <p>RANDOM</p> */}\n        </div>\n        <div className=\"account\">\n          {user ? (\n            <div className=\"logged-in__account\">\n              <p>\n                <strong>{user}</strong>\n              </p>\n              {/* <p>(123)</p> */}\n              <i className=\"fas fa-cog\" onClick={handleShowAccountDetails}></i>\n              <p\n                // onClick={() => {\n                //   setUser(null);\n                // }}\n                onClick={handleLogout}\n              >\n                Logout\n              </p>\n            </div>\n          ) : (\n            <div className=\"logged-out__account\">\n              <p\n                onClick={() => {\n                  setShowSignup((prev) => !prev);\n                }}\n              >\n                Sign Up\n              </p>\n              <p\n                // onClick={() => {\n                //   setUser(\"dor\");\n                // }}\n                onClick={() => {\n                  setShowLogin((prev) => !prev);\n                }}\n              >\n                Log In\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"home-sort__container\">\n        <div>\n          <h1 className=\"home\">clonnit</h1>\n        </div>\n        <div className=\"sort\">\n          <div>Best</div>\n          <div>Hot</div>\n          <div>New</div>\n          <div>Rising</div>\n          <div>Top</div>\n          <div>Controversial</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useContext, useState } from \"react\";\nimport { userContext } from \"../context/UserContext\";\n// import { AuthContext } from \"../context/AuthContext\";\n\nfunction Sidebar({\n  setShowSignup,\n  handleShowNewPostPopup,\n  showActiveTab,\n  setShowActiveTab,\n  handleShowClonnitPremium,\n}) {\n  // const { user, setUser } = useContext(AuthContext); //currentUser, setCurrentUser?\n  const { user, setUser } = useContext(userContext); //currentUser, setCurrentUser?\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"search-create__container\">\n        <input type=\"text\" className=\"searchbar\" placeholder=\"search\" />\n        <div className=\"arrowBtn\">\n          {user ? (\n            <button\n              onClick={() => {\n                setShowActiveTab(true);\n                handleShowNewPostPopup();\n              }}\n            >\n              Submit a new link\n            </button>\n          ) : (\n            <button onClick={() => setShowSignup((prev) => !prev)}>\n              Submit a new link\n            </button>\n          )}\n        </div>\n        <div className=\"arrowBtn\">\n          {user ? (\n            <button\n              onClick={() => {\n                setShowActiveTab(false);\n                handleShowNewPostPopup();\n              }}\n            >\n              Submit a new text post\n            </button>\n          ) : (\n            <button onClick={() => setShowSignup((prev) => !prev)}>\n              Submit a new text post\n            </button>\n          )}\n        </div>\n        <div\n          className=\"clonnit-premium__container\"\n          onClick={handleShowClonnitPremium}\n        >\n          <div>\n            <h3>\n              clonnit <span>premium</span>\n            </h3>\n            <p>\n              Get an ad-free experience with special benefits and directly\n              support Clonnit\n            </p>\n            <button>Get Clonnit Premium</button>\n          </div>\n        </div>\n        {/* <div className=\"arrowBtn\">\n          {user ? (\n            <button onClick={() => alert(\"coming soon\")}>\n              Create your own subclonnit\n            </button>\n          ) : (\n            <button onClick={() => setShowSignup(true)}>\n              Create your own subclonnit\n            </button>\n          )}\n        </div>\n        <div className=\"recently-viewed__container\">\n          <p>RECENTLY VIEWED LINKS</p>\n          <div className=\"recently-viewed\">\n            <ul>\n              <li></li>\n            </ul>\n          </div>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\n\nfunction MainPage() {\n  return <div></div>;\n}\n\nexport default MainPage;\n","import React, { useState, useRef } from \"react\";\nimport { auth } from \"../firebase\";\n// import { useAuth } from \"../context/AuthContext\";\n\nfunction SignupForm({\n  showSignup,\n  showLogin,\n  setShowSignup,\n  setShowLogin,\n  user,\n  setUser,\n}) {\n  const [showNextpage, setShowNextpage] = useState(false);\n  const emailRef = useRef();\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const formRef = useRef();\n  // const { signup, currentUser } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    const username = usernameRef.current.value;\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((res) => {\n          return auth.currentUser.updateProfile({\n            displayName: username,\n          });\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      setUser(auth.currentUser.displayName);\n      formRef.current.reset();\n      setShowSignup(false);\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n    setLoading(false);\n  }\n\n  const handleShowLoginForm = () => {\n    setShowSignup(false);\n    setShowLogin(true);\n  };\n\n  return (\n    // <div className=\"formBackground\">\n    <div className=\"signup-form__container\">\n      <strong\n        onClick={() => {\n          setShowSignup(false);\n        }}\n      >\n        X\n      </strong>\n\n      <div>\n        <h3>Sign up to get your own personalized Clonnit experience!</h3>\n        <p>\n          By having a Clonnit account, you can join, vote, and comment on all\n          your favorite Clonnit content. Sign up in just seconds.\n        </p>\n      </div>\n      {!showNextpage ? (\n        <div>\n          {/* {JSON.stringify(currentUser)} */}\n          {/* {currentUser.email} */}\n          <form>\n            <button\n              onClick={() => {\n                setShowNextpage(true);\n              }}\n            >\n              Next\n            </button>\n          </form>\n          <p>\n            Already a User? <span onClick={handleShowLoginForm}>Log In</span>\n          </p>\n        </div>\n      ) : (\n        <div>\n          <h2 style={{ color: \"red\" }}>{error}</h2>\n          <form ref={formRef} onSubmit={handleSubmit}>\n            {/* <form> */}\n            <label>Enter Email</label>\n            <input\n              ref={emailRef}\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              required\n            ></input>\n            <label>Choose username</label>\n            <input\n              ref={usernameRef}\n              type=\"text\"\n              placeholder=\"username\"\n              required\n            ></input>\n            <label>set password</label>\n            <input\n              ref={passwordRef}\n              type=\"password\"\n              placeholder=\"password\"\n              required\n            ></input>\n            <label>confirm password</label>\n            <input\n              ref={passwordConfirmRef}\n              type=\"password\"\n              placeholder=\"confirm password\"\n              required\n            ></input>\n            <div className=\"modal-button__container\">\n              <button\n                onClick={() => {\n                  setShowNextpage(false);\n                }}\n              >\n                Back\n              </button>\n              <button type=\"submit\" disabled={loading}>\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n    // </div>\n  );\n}\n\nexport default SignupForm;\n","import React, { useState, useRef } from \"react\";\n// import { useAuth } from \"../context/AuthContext\";\nimport { auth } from \"../firebase\";\n\nfunction LoginForm({ setShowSignup, setShowLogin, setUser }) {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const formRef = useRef();\n  // const { login } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await auth.signInWithEmailAndPassword(email, password);\n      setUser(auth.currentUser.displayName);\n      formRef.current.reset();\n      setShowLogin(false);\n    } catch {\n      setError(\"Failed to log in\");\n    }\n    setLoading(false);\n  }\n\n  const handleShowSignupForm = () => {\n    setShowLogin(false);\n    setShowSignup(true);\n  };\n\n  return (\n    <div className=\"login-form__container\">\n      <strong\n        onClick={() => {\n          setShowLogin(false);\n        }}\n      >\n        X\n      </strong>\n      <div>\n        <h3>Sign up to get your own personalized Clonnit experience!</h3>\n        <p>\n          By having a Clonnit account, you can join, vote, and comment on all\n          your favorite Clonnit content. Sign up in just seconds.\n        </p>\n      </div>\n      <div>\n        {/* <form> */}\n        <form ref={formRef} onSubmit={handleSubmit}>\n          <label>Log In</label>\n          <h2 style={{ color: \"red\" }}>{error}</h2>\n          <input ref={emailRef} type=\"email\" placeholder=\"email\"></input>\n          <input\n            ref={passwordRef}\n            type=\"password\"\n            placeholder=\"password\"\n          ></input>\n          <button type=\"submit\" className=\"submit\">\n            Log In\n          </button>\n        </form>\n        <p>\n          Don't have an account?{\" \"}\n          <span onClick={handleShowSignupForm}>Sign up</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport uniqid from \"uniqid\";\n\nfunction PostComment({ user, dataID, commentAuthor, commentText }) {\n  const [commentValue, setCommentValue] = useState(\"\");\n  const [containsComments, setContainsComments] = useState(false);\n  const [commentsArray, setCommentsArray] = useState([]);\n  const [comments, setComments] = useState(\"\");\n  const formRef = useRef();\n\n  const handleChange = (e) => {\n    setCommentValue(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setContainsComments(true);\n    formRef.current.reset();\n\n    const mapped = (\n      <div className=\"comment\" key={uniqid()}>\n        <h6 className=\"comment-author\">\n          Submitted by <span>{user}</span>\n        </h6>\n        <div className=\"comment-value\">{commentValue}</div>\n      </div>\n    );\n    handleFirestoreCommentUpload(user, commentValue);\n    setCommentsArray((prev) => [mapped, ...prev]);\n    setComments(mapped);\n  };\n\n  const handleFirestoreCommentUpload = (commentAuthor, commentText) => {\n    db.collection(\"posts\")\n      // db.collection(\"comments\")\n      .doc(dataID)\n      .update({\n        // .add({\n        dataID,\n        commentAuthor,\n        commentText,\n      })\n      // })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  // useEffect(() => {\n  //   db.collection(\"posts\").onSnapshot((snapshot) => {\n  //     mapFirestoreData(snapshot.docs);\n  //   });\n\n  //   const mapFirestoreData = (data) => {\n  //     console.log(data);\n  //     data.forEach((doc) => {\n  //       let { commentAuthor, commentText } = doc.data();\n  //       const mapped = (\n  //         <div className=\"comment\" data-id={dataID} key={uniqid()}>\n  //           <h6 className=\"comment-author\">\n  //             Submitted by <span>{commentAuthor}</span>\n  //           </h6>\n  //           <div className=\"comment-value\">{commentText}</div>\n  //         </div>\n  //       );\n\n  //       setCommentsArray((prev) => [mapped, ...prev]);\n  //     });\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    if (!commentAuthor && !commentText) {\n      return;\n    } else {\n      const commentData = (\n        <div className=\"comment\" key={uniqid()}>\n          <h6 className=\"comment-author\">\n            Submitted by <span>{commentAuthor}</span>\n          </h6>\n          <div className=\"comment-value\">{commentText}</div>\n        </div>\n      );\n\n      setCommentsArray((prev) => [commentData, ...prev]);\n    }\n  }, []);\n  return (\n    <div className=\"post-comment\">\n      <h4>\n        Commenting as: <span>{user}</span>\n      </h4>\n      <form ref={formRef} onSubmit={handleSubmit}>\n        <textarea onChange={handleChange}></textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <hr />\n      {/* <div className=\"comment\"></div> */}\n      {commentsArray}\n    </div>\n  );\n}\n\nexport default PostComment;\n","import React, { useState, useRef } from \"react\";\n\nfunction PostShare({ imgSrc, titleAnchorURL }) {\n  const inputRef = useRef();\n  const [value, setValue] = useState(\"\");\n  const [textCopied, setTextCopied] = useState(false);\n\n  const handleCopy = () => {\n    inputRef.current.select();\n    document.execCommand(\"copy\");\n    setTextCopied(true);\n    setTimeout(() => {\n      setTextCopied(false);\n    }, 2000);\n  };\n  // const handleSetValue = () => {\n  // if (imgSrc) {\n  //   setValue(imgSrc);\n  // } else if (titleAnchorURL) {\n  //   setValue(titleAnchorURL);\n  // }\n  // };\n\n  return (\n    <div className=\"post-share\">\n      <h4>\n        Share to all your friends: {textCopied && <span>Text copied!</span>}\n      </h4>\n\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={\n          imgSrc\n            ? imgSrc\n            : titleAnchorURL\n            ? titleAnchorURL\n            : \"Nothing to share :(\"\n        }\n      />\n      <button onClick={handleCopy} className=\"copy-button\">\n        Copy\n      </button>\n    </div>\n  );\n}\n\nexport default PostShare;\n","import React, { useState, useRef, useContext } from \"react\";\nimport { userContext } from \"../context/UserContext\";\n// import { AuthContext } from \"../context/AuthContext\";\nimport PostComment from \"./PostComment\";\nimport PostShare from \"./PostShare\";\n\nfunction Post({\n  title,\n  author,\n  imgSrc,\n  urlSrc,\n  textContent,\n  timeStamp,\n  dateStamp,\n  titleAnchorURL,\n  urlSrcThumbnail,\n  setShowSignup,\n  dataID,\n  commentAuthor,\n  commentText,\n}) {\n  const [showPreview, setShowPreview] = useState(false);\n  const [upvoted, setUpvoted] = useState(false);\n  const [downvoted, setDownvoted] = useState(false);\n  const [karma, setKarma] = useState(1);\n  const [showComments, setShowComments] = useState(false);\n  const [showSharePost, setShowSharePost] = useState(false);\n  const [hidePost, setHidePost] = useState(false);\n  const upvoteRef = useRef();\n  const downvoteRef = useRef();\n  // const { user, setUser } = useContext(AuthContext); //currentUser, setCurrentUser?\n  const { user, setUser } = useContext(userContext); //currentUser, setCurrentUser?\n  const [postID, setPostID] = useState(dataID);\n\n  const handleUpvote = () => {\n    if (downvoted && !upvoted) {\n      setUpvoted(true);\n      setDownvoted(false);\n      setKarma((prev) => prev + 2);\n    } else if (!upvoted) {\n      setUpvoted(true);\n      setDownvoted(false);\n      setKarma((prev) => prev + 1);\n    } else {\n      setUpvoted(false);\n      setKarma((prev) => prev - 1);\n    }\n  };\n\n  const handleDownvote = () => {\n    if (upvoted && !downvoted) {\n      setDownvoted(true);\n      setUpvoted(false);\n      setKarma((prev) => prev - 2);\n    } else if (!downvoted) {\n      setDownvoted(true);\n      setUpvoted(false);\n      setKarma((prev) => prev - 1);\n    } else {\n      setDownvoted(false);\n      setKarma((prev) => prev + 1);\n    }\n  };\n\n  const handleShowPostPreview = () => {\n    setShowPreview(!showPreview);\n  };\n\n  const handleShowComments = () => {\n    setShowComments((prev) => !prev);\n  };\n\n  const handleShowSharePost = () => {\n    setShowSharePost((prev) => !prev);\n  };\n\n  const handleHidePost = () => {\n    setHidePost((prev) => !prev);\n    setShowComments(false);\n    setShowPreview(false);\n    setShowSharePost(false);\n  };\n\n  return (\n    <div className=\"post\">\n      {!hidePost && (\n        <div className=\"post-karma__container\">\n          <div className=\"upvote\">\n            <i\n              ref={upvoteRef}\n              onClick={user ? handleUpvote : () => setShowSignup(true)}\n              className=\"fas fa-arrow-up\"\n              style={upvoted ? { color: \"#ff4500\" } : { color: \"#cbccc4\" }}\n            ></i>\n          </div>\n          <div className=\"karma-count\">{karma}</div>\n          <div className=\"downvote\">\n            <i\n              ref={downvoteRef}\n              onClick={user ? handleDownvote : () => setShowSignup(true)}\n              className=\"fas fa-arrow-down\"\n              style={downvoted ? { color: \"#369\" } : { color: \"#cbccc4\" }}\n            ></i>\n          </div>\n        </div>\n      )}\n      {!hidePost && (\n        <div className=\"post-image__container\">\n          {imgSrc ? (\n            <img src={imgSrc} alt={title}></img>\n          ) : urlSrc ? (\n            <img src={urlSrcThumbnail} alt=\"thumbnail\"></img>\n          ) : (\n            <i className=\"fas fa-comment-dots fa-4x\"></i>\n          )}\n        </div>\n      )}\n      {!hidePost && (\n        <div className=\"post-text__container\">\n          <a href={titleAnchorURL}>\n            <h3 className=\"post-title\">{title}</h3>\n          </a>\n          <div className=\"post-preview-info__container\">\n            <div onClick={handleShowPostPreview} className=\"post-preview-btn\">\n              {!showPreview ? (\n                <i className=\"fas fa-plus fa-2x\"></i>\n              ) : (\n                <i className=\"fas fa-times fa-2x\"></i>\n              )}\n            </div>\n            <div className=\"post-info\">\n              <p className=\"author-info\">\n                submitted by <span>{author}</span> to c/all{/*subclonnit*/} at{\" \"}\n                {timeStamp} on {dateStamp}\n              </p>\n              <ul className=\"list-buttons\">\n                <li onClick={handleShowComments}>comments</li>\n                <li onClick={handleShowSharePost}>share</li>\n                <li>save</li>\n                <li onClick={handleHidePost}>hide</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n      {showPreview ? (\n        <div className=\"post-preview\">\n          {imgSrc && (\n            <img src={imgSrc} alt=\"preview popup\" className=\"preview-img\" />\n          )}\n          {textContent && <div className=\"text-preview\">{textContent}</div>}\n          {urlSrc && (\n            <iframe\n              width=\"560\"\n              height=\"315\"\n              src={urlSrc}\n              title=\"YouTube video player\"\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen\n            ></iframe>\n          )}\n        </div>\n      ) : null}\n      {showComments && (\n        <PostComment\n          commentAuthor={commentAuthor}\n          commentText={commentText}\n          dataID={dataID}\n          user={user}\n        />\n      )}\n      {showSharePost && (\n        <PostShare imgSrc={imgSrc} titleAnchorURL={titleAnchorURL} />\n      )}\n      {hidePost && (\n        <div className=\"hidden\">\n          <h2>\n            Post Hidden. <span onClick={handleHidePost}>UNDO?</span>\n          </h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useState } from \"react\";\n\nfunction ClonnitPremium() {\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleHover = () => {\n    setShowMessage(true);\n  };\n\n  const handleClick = () => {\n    setShowMessage(true);\n  };\n\n  return (\n    <div className=\"clonnit-premium\">\n      <div className=\"premium-heading\">\n        <h3>\n          clonnit <span>premium</span>\n        </h3>\n        <p>\n          Get an ad-free experience with special benefits and directly support\n          Clonnit\n        </p>\n      </div>\n      <div className=\"premium-body\">\n        <h4>The benefits to purchasing Clonnit Premium are endless:</h4>\n        <ul>\n          <li>\n            Unlimited upvotes/downvotes per post!{\" \"}\n            <span>\n              Is there a post that you just love? Upvote them as many times as\n              you like! Got a post that you've just not vibin' with? Downvote\n              them into oblivion!\n            </span>\n          </li>\n          <li>\n            No Ads. Ever.{\" \"}\n            <span>\n              If we ever decide to incorporate ads onto the site, you can be\n              sure you'll never be seeing them!\n            </span>\n          </li>\n          <li>\n            You will recieve a custom, animated outline for your username so you\n            can show off in front of everyone.{\" \"}\n            <span>Look at Mr(s). Fancy Pants and his/her flashy username.</span>\n          </li>\n        </ul>\n        <h4>\n          Only <span>$7999.95</span> $4999.95!\n        </h4>\n      </div>\n      {!showMessage ? (\n        <div\n          className=\"premium-payment\"\n          onMouseEnter={handleHover}\n          onClick={handleClick}\n        >\n          <h4>Enter your Payment info below</h4>\n          <div className=\"payment-container\">\n            <div className=\"payment-item\">\n              <label htmlFor=\"holder\">Card holder</label>\n              <input\n                type=\"password\"\n                name=\"\"\n                id=\"holder\"\n                placeholder=\"Enter name\"\n              />\n            </div>\n            <div className=\"payment-item\">\n              <label htmlFor=\"cc\">Card Info</label>\n              <input\n                type=\"password\"\n                name=\"\"\n                id=\"cc\"\n                placeholder=\"xxxx-xxxx-xxxx-xxxx\"\n              />\n            </div>\n            <div className=\"payment-item-hz\">\n              <div>\n                <label htmlFor=\"ex\">Expiration Date</label>\n                <input\n                  className=\"third\"\n                  type=\"password\"\n                  name=\"\"\n                  id=\"ex\"\n                  placeholder=\"mm\"\n                />\n                <input\n                  className=\"third\"\n                  type=\"password\"\n                  name=\"\"\n                  id=\"ex\"\n                  placeholder=\"yy\"\n                />\n              </div>\n              <div>\n                <label htmlFor=\"cvv\">CVV</label>\n                <input\n                  className=\"third\"\n                  type=\"password\"\n                  name=\"\"\n                  id=\"cc\"\n                  placeholder=\"cvv\"\n                />\n              </div>\n            </div>\n            <button>PURCHASE</button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"billing-unavailable\">\n          <h4>\n            Sorry, our billing system is down for the moment, please try again\n            later\n          </h4>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ClonnitPremium;\n","import React, { useState, useRef, useContext } from \"react\";\nimport { userContext } from \"../context/UserContext\";\n// import { AuthContext } from \"../context/AuthContext\";\nimport Post from \"./Post\";\nimport { db } from \"../firebase\";\nimport uniqid from \"uniqid\";\n// import useStorage from \"../hooks/useStorage\";\nimport { storage } from \"../firebase\";\n\nfunction NewPost({\n  setShowNewPostPopup,\n  setPostArray,\n  posts,\n  title,\n  author,\n  imgSrc,\n  urlSrc,\n  textContent,\n  setPosts,\n  setTitle,\n  setAuthor,\n  setImgSrc,\n  setUrlSrc,\n  setTextContent,\n  showActiveTab,\n  setShowActiveTab,\n  setShowSignup,\n}) {\n  const [displayPreviewImg, setDisplayPreviewImg] = useState(false);\n  const [currentFile, setCurrentFile] = useState(null); //might need to be lifted up a level\n  const [uploadedIMG, setUploadedIMG] = useState(\"\");\n  const [currentFilePath, setCurrentFilePath] = useState(\"\"); //might need to be lifted up a level\n  // const [title, setTitle] = useState(\"\"); //might need to be lifted up a level\n  const [url, setUrl] = useState(\"\"); //might need to be lifted up a level\n  const [urlThumbnail, setUrlThumbnail] = useState(\"\");\n  const [titleAnchorURL, setTitleAnchorURL] = useState(\"\");\n  const [titleLength, setTitleLength] = useState(0);\n  const [placeHolderArray, setPlaceHolderArray] = useState([]); //do I really need this array? and the test array?\n  const [timeStamp, setTimeStamp] = useState(new Date().toLocaleTimeString());\n  const [dateStamp, setDateStamp] = useState(new Date().toLocaleDateString());\n  // const { user } = useContext(AuthContext); //currentUser, setCurrentUser?\n  const [error, setError] = useState(\"\");\n  const { user, setUser } = useContext(userContext); //currentUser, setCurrentUser?\n  const imgSrcRef = useRef();\n  const titleRef = useRef();\n  const urlSrcRef = useRef();\n  const textContentRef = useRef();\n\n  // const [testlink, setTestlink] = useState(null);\n\n  const handleActiveTab = () => {\n    setShowActiveTab(!showActiveTab);\n  };\n\n  const handleFileUpload = (e) => {\n    //files under 2MB accepted\n    if (e.target.files[0].size > 2097152) {\n      setError(\"File is too big!\");\n      e.target.files = [];\n    } else {\n      const filePath = imgSrcRef.current.files[0].name;\n      setCurrentFile(URL.createObjectURL(e.target.files[0]));\n      setCurrentFilePath(filePath);\n      // console.log(filePath);\n      setDisplayPreviewImg(true);\n      handleStorageUpload();\n    }\n  };\n\n  const handleStorageUpload = async () => {\n    // //upload img to storage and get back url to then upload to firestore\n    const storageRef = storage.ref();\n    const fileRef = storageRef.child(imgSrcRef.current.files[0].name);\n    await fileRef.put(imgSrcRef.current.files[0]);\n    setUploadedIMG(await fileRef.getDownloadURL());\n  };\n\n  const handleButtonClick = (e) => {\n    e.preventDefault();\n    imgSrcRef.current.click();\n  };\n\n  const handleDeleteFileSelection = () => {\n    setCurrentFilePath(\"\");\n    setCurrentFile(null);\n    setDisplayPreviewImg(false);\n  };\n\n  const handleUrlChange = async (e) => {\n    setTitleAnchorURL(e.target.value);\n    const sliced = e.target.value.slice(-11);\n    const updatedURL = `https://www.youtube.com/embed/${sliced}`;\n    const thumbnail = `https://img.youtube.com/vi/${sliced}/0.jpg`;\n    setUrl(updatedURL);\n    setUrlThumbnail(thumbnail);\n    // const blob = await new Blob([url]);\n    // await console.log(blob);\n    // await setTestlink(URL.createObjectURL(blob));\n    // await console.log(testlink);\n  };\n\n  const handleTitleChange = (e) => {\n    setTitle(e.target.value);\n    setTitleLength(e.target.value.length);\n  };\n\n  const handleTextContentChange = (e) => {\n    setTextContent(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    let titleValue = titleRef.current.value;\n    let imgSrcValue = imgSrcRef.current ?? \"\";\n    let urlSrcValue = urlSrcRef.current ?? \"\";\n    let textContentValue = textContentRef.current ?? \"\";\n\n    if (!titleValue && (!imgSrcValue || !urlSrcValue || !textContentValue)) {\n      setError(\"You are missing a required field\");\n      return;\n    } else {\n      setTitle(titleValue);\n      setImgSrc(imgSrcValue);\n      setUrlSrc(urlSrcValue);\n      setTextContent(textContentValue);\n      setDisplayPreviewImg(false);\n      setShowNewPostPopup(false);\n      setPlaceHolderArray((prev) => [\n        titleValue,\n        user,\n        imgSrcValue,\n        urlSrcValue,\n        textContentValue,\n      ]);\n\n      // const test = [];\n      // test.push([titleValue, user, imgSrcValue, urlSrcValue, textContentValue]);\n\n      //upload the post data to firestore\n      handleFirestoreDataUpload(\n        titleValue,\n        user,\n        uploadedIMG,\n        // currentFile,\n        url,\n        textContent,\n        timeStamp,\n        dateStamp,\n        titleAnchorURL,\n        urlThumbnail\n      );\n\n      // //post the same data to the screen\n      // const mapped = test.map((item) => (\n      //   <Post\n      //     key={uniqid()}\n      //     title={item[0]}\n      //     author={item[1]}\n      //     imgSrc={uploadedIMG}\n      //     // imgSrc={currentFile}\n      //     urlSrc={url}\n      //     textContent={textContent}\n      //     timeStamp={timeStamp}\n      //     dateStamp={dateStamp}\n      //     titleAnchorURL={titleAnchorURL}\n      //     urlSrcThumbnail={urlThumbnail}\n      //     setShowSignup={setShowSignup}\n      //   />\n      // ));\n      // setPostArray((prev) => [mapped, ...prev]);\n    }\n  };\n\n  const handleFirestoreDataUpload = (\n    title,\n    author,\n    imgSrc,\n    urlSrc,\n    textContent,\n    timeStamp,\n    dateStamp,\n    titleAnchorUrl,\n    urlSrcThumbnail\n  ) => {\n    db.collection(\"posts\")\n      .add({\n        title,\n        author,\n        imgSrc,\n        urlSrc,\n        textContent,\n        timeStamp,\n        dateStamp,\n        titleAnchorUrl,\n        urlSrcThumbnail,\n        commentAuthor: \"\",\n        commentText: \"\",\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n  return (\n    <div className=\"new-post__container\">\n      <h3>submit to clonnit</h3>\n      <strong\n        className=\"exit-btn\"\n        onClick={() => {\n          setShowNewPostPopup(false);\n        }}\n      >\n        X\n      </strong>\n      <div>\n        <div className=\"link-text__container\">\n          <div\n            onClick={handleActiveTab}\n            style={\n              showActiveTab\n                ? {\n                    color: \"#edf6ff\",\n                    background: \"#369\",\n                    transform: \"scale(1.2)\",\n                  }\n                : {\n                    color: \"#369\",\n                    background: \"#edf6ff\",\n                    transform: \"scale(.9)\",\n                  }\n            }\n          >\n            Link\n          </div>\n          <div\n            onClick={handleActiveTab}\n            style={\n              !showActiveTab\n                ? {\n                    color: \"#edf6ff\",\n                    background: \"#369\",\n                    transform: \"scale(1.2)\",\n                  }\n                : {\n                    color: \"#369\",\n                    background: \"#edf6ff\",\n                    transform: \"scale(.9)\",\n                  }\n            }\n          >\n            Text\n          </div>\n        </div>\n        <div className=\"post-hint\">\n          {showActiveTab ? (\n            <p>\n              You are submitting a link. The key to a successful submission is\n              interesting content and a descriptive title.\n            </p>\n          ) : (\n            <p>\n              You are submitting a text-based post. Speak your mind. A title is\n              required, but expanding further in the text field is not.\n              Beginning your title with \"vote up if\" is violation of\n              intergalactic law.\n            </p>\n          )}\n        </div>\n        <form action=\"\" className=\"newPost__form\" onSubmit={handleSubmit}>\n          {showActiveTab && !currentFile && (\n            <div className=\"url__container\">\n              <label htmlFor=\"url\">YouTube Video</label>\n              <input\n                ref={urlSrcRef}\n                id=\"url\"\n                type=\"url\"\n                onChange={handleUrlChange}\n              />\n            </div>\n          )}\n          {showActiveTab && !url && (\n            <div className=\"image-video__container\">\n              <label htmlFor=\"fileUpload\">image</label>\n              <div className=\"drag-n-drop\">\n                <input\n                  id=\"fileUpload\"\n                  type=\"file\"\n                  ref={imgSrcRef}\n                  hidden=\"hidden\"\n                  // accept=\"image/*,video/quicktime,video/mp4\"\n                  // ^^^ maybe work on accepting videos in the future\n                  accept=\"image/*\"\n                  onChange={handleFileUpload}\n                />\n                <button onClick={handleButtonClick}>CHOOSE FILE</button>\n\n                {displayPreviewImg && (\n                  <div>\n                    <div>\n                      <p>{currentFilePath}</p>\n                      <p onClick={handleDeleteFileSelection}>X</p>\n                    </div>\n                    <img\n                      className=\"imgPreview\"\n                      src={currentFile}\n                      alt=\"Preview\"\n                    ></img>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          <div className=\"title__container\">\n            <label className=\"required\" htmlFor=\"title\">\n              title{\" \"}\n              <span\n                style={\n                  titleLength === 300 ? { color: \"red\" } : { color: \"#828473\" }\n                }\n              >\n                {titleLength}/300\n              </span>\n            </label>\n            <textarea\n              ref={titleRef}\n              id=\"title\"\n              type=\"text\"\n              maxLength=\"300\"\n              onChange={handleTitleChange}\n            />\n          </div>\n          {!showActiveTab && (\n            <div className=\"text__container\">\n              <label htmlFor=\"text\">\n                text <span>(optional)</span>\n              </label>\n              <textarea\n                ref={textContentRef}\n                id=\"text\"\n                type=\"text\"\n                onChange={handleTextContentChange}\n              />\n            </div>\n          )}\n          {/* <div className=\"subclonnit__container\">\n            <label htmlFor=\"subclonnit\">subclonnit</label>    IMPLEMENT REACT ROUTER AND PAGES IN THE FUTURE\n            <input id=\"subclonnit\" type=\"text\" />\n          </div> */}\n          <div className=\"submit__container\">\n            <h2 style={{ color: \"red\" }}>{error}</h2>\n            <button>submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default NewPost;\n","import React from \"react\";\nimport { auth } from \"../firebase\";\n\nfunction AccountDetails({ setShowAccountDetails }) {\n  return (\n    <div className=\"account-details\">\n      <strong\n        onClick={() => {\n          setShowAccountDetails(false);\n        }}\n      >\n        X\n      </strong>\n      <h4>Account Details</h4>\n      <p>\n        <span>Username:</span> {auth.currentUser.displayName}\n      </p>\n      <p>\n        <span>Email:</span> {auth.currentUser.email}\n      </p>\n      <p>\n        <span>Account Created:</span> {auth.currentUser.metadata.creationTime}\n      </p>\n      <p>\n        <span>Last Sign In:</span> {auth.currentUser.metadata.lastSignInTime}\n      </p>\n\n      <div></div>\n    </div>\n  );\n}\n\nexport default AccountDetails;\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/main.css\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport MainPage from \"./pages/MainPage\";\nimport SignupForm from \"./components/SignupForm\";\nimport LoginForm from \"./components/LoginForm\";\nimport Post from \"./components/Post\";\nimport ClonnitPremium from \"./components/ClonnitPremium\";\nimport NewPostPopup from \"./components/NewPostPopup\";\nimport AccountDetails from \"./components/AccountDetails\";\nimport { userContext } from \"./context/UserContext\";\nimport { auth, db } from \"./firebase\";\nimport uniqid from \"uniqid\";\n// import { AuthProvider } from \"./context/AuthContext\";\n\n// export const userContext = createContext(null);\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [showSignup, setShowSignup] = useState(false);\n  const [showLogin, setShowLogin] = useState(false);\n  const [showNewPostPopup, setShowNewPostPopup] = useState(false);\n  const [postArray, setPostArray] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const [urlSrc, setUrlSrc] = useState(\"\");\n  const [textContent, setTextContent] = useState(\"\");\n  const [showActiveTab, setShowActiveTab] = useState(true);\n  const [showClonnitPremium, setShowClonnitPremium] = useState(false);\n  const [showAccountDetails, setShowAccountDetails] = useState(false);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .get()\n      .then((snapshot) => {\n        //.snapshot instead of .get().then causes a bug where double posts appear\n        mapFirestoreData(snapshot.docs);\n      });\n\n    const mapFirestoreData = (data) => {\n      data.forEach((doc) => {\n        let {\n          title,\n          author,\n          imgSrc,\n          urlSrc,\n          textContent,\n          timeStamp,\n          dateStamp,\n          titleAnchorUrl,\n          urlSrcThumbnail,\n          commentAuthor,\n          commentText,\n        } = doc.data();\n        const mapped = (\n          <Post\n            dataID={doc.id}\n            key={uniqid()}\n            title={title}\n            author={author}\n            imgSrc={imgSrc}\n            urlSrc={urlSrc}\n            textContent={textContent}\n            timeStamp={timeStamp}\n            dateStamp={dateStamp}\n            titleAnchorURL={titleAnchorUrl}\n            urlSrcThumbnail={urlSrcThumbnail}\n            setShowSignup={setShowSignup}\n            commentAuthor={commentAuthor}\n            commentText={commentText}\n          />\n        );\n\n        setPostArray((prev) => [mapped, ...prev]);\n      });\n    };\n  }, []);\n\n  const handleShowNewPostPopup = () => {\n    setShowNewPostPopup(!showNewPostPopup);\n  };\n\n  const handleShowClonnitPremium = () => {\n    setShowClonnitPremium((prev) => !prev);\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(\"user logged in: \", user);\n        setUser(user.displayName);\n      } else {\n        console.log(\"user logged out\");\n        setUser(null);\n      }\n    });\n\n    return () => unsubscribe;\n  }, []);\n\n  return (\n    <userContext.Provider value={{ user, setUser }}>\n      {/* <AuthProvider> */}\n      <div>\n        <Header\n          setShowSignup={setShowSignup}\n          setShowLogin={setShowLogin}\n          setShowAccountDetails={setShowAccountDetails}\n          user={user}\n          setUser={setUser}\n        />\n        <Sidebar\n          setShowSignup={setShowSignup}\n          handleShowNewPostPopup={handleShowNewPostPopup}\n          showActiveTab={showActiveTab}\n          setShowActiveTab={setShowActiveTab}\n          handleShowClonnitPremium={handleShowClonnitPremium}\n        />\n        <MainPage />\n        {postArray}\n        {showSignup && (\n          <SignupForm\n            setShowSignup={setShowSignup}\n            setShowLogin={setShowLogin}\n            user={user}\n            setUser={setUser}\n          />\n        )}\n        {showLogin && (\n          <LoginForm\n            setShowSignup={setShowSignup}\n            setShowLogin={setShowLogin}\n            setUser={setUser}\n          />\n        )}\n        {showNewPostPopup && (\n          <NewPostPopup\n            setPostArray={setPostArray}\n            setShowNewPostPopup={setShowNewPostPopup}\n            posts={posts}\n            title={title}\n            author={author}\n            imgSrc={imgSrc}\n            urlSrc={urlSrc}\n            textContent={textContent}\n            setPosts={setPosts}\n            setTitle={setTitle}\n            setAuthor={setAuthor}\n            setImgSrc={setImgSrc}\n            setUrlSrc={setUrlSrc}\n            setTextContent={setTextContent}\n            showActiveTab={showActiveTab}\n            setShowActiveTab={setShowActiveTab}\n            setShowSignup={setShowSignup}\n          />\n        )}\n        {showAccountDetails && (\n          <AccountDetails setShowAccountDetails={setShowAccountDetails} />\n        )}\n\n        {showClonnitPremium && (\n          <ClonnitPremium setShowClonnitPremium={setShowClonnitPremium} />\n        )}\n      </div>\n      {/* </AuthProvider> */}\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}